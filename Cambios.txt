ORDENADO CRONOLÓGICAMENTE
(Lo más reciente abajo del todo)

┌────────────┐
│ 25/07/2022 │
└────────────┘

Alessandro:
	- export y unset funcionan como deberia;
	pero dejan leaks si la variable fue modificada mas de una vez;

	- agrergue funcion shlvl para aumentar el nivel de la maquina cuando se inicia la minishell :D


┌────────────┐
│ 26/07/2022 │
└────────────┘

Alessandro:
	- modifique la manera de guardar los punteros de los env para poder liberarlos mas facil.

	- agregue la fucncion ft_export_no_args (todavia no funciona del todo)
	[para imprimir los env en orden alfabetico]

	- aregregue la funcion ft_len2chr
	[cuenta los caracteres de un texto hasta cioncidir con el caracter enviado.


┌────────────┐
│ 27/07/2022 │
└────────────┘

Iván:
	- He añadido ft_pwd, que imprime por pantalla el nombre del directorio de trabajo actual.

	- He creado la función get_env_value que busca en la lista de t_env
	y devuelve el valor de la variable que le pidas. Si no la encuentra devuelve NULL.
	Ejemplo:
	{
		char *pwd;
		pwd = get_env_value("PWD", mini);
		// pwd = "/Users/alsanche/minishell/"
	}

	- Los prototipos de lo anterior incluidos en el header.

	- Sigo trabajando en ft_cd desde mi disco duro.


Alessandro:
	- Ordene los env en una carpeta para tenerlo un poco mas ordenado.

	- corrijo algunos errores de mi codigo que daban leaks.

	- export y env ya funcionan como deberina a falta de seguir pobando 
	los originales en bash.

	- [ agregue la funcion ft_puterror(char *funtion, char *str)
	para imprimir el mensaje dde erorro correspodiente en caso de fallar. ]


┌────────────┐
│ 30/07/2022 │
└────────────┘

Iván:
	- He reestructurado TODO!

		CARPETAS
			-carpeta raiz: solo el Makefile (y este archivo txt).
			-lib: con la librería libft.
			-src: con todos los .c y con minishell.h.

		MAKEFILE
		He limpiado el Makefile para que esté más claro.
		He añadido los INCLUDES para que podamos poner #include <minishell.h>
		He correjido el Makefile de libft para que funcione como librería correctamente sin tener que hacer remake.


		NOMBRES CAMBIADOS (antiguo >> nuevo)
			execv		>>	ft_execv
			read_line	>>	analyse_line
			env			>>	ft_env
			exportsa	>>	ft_export_no_args
			export		>>	ft_export
		
		En las funciones BUILTIN, he puesto la descripción y lo que piden en el subject.
		Algunas funciones que estaban junto a otras en el mismo archivo las he separado en archivos independientes.


┌────────────┐
│ 31/07/2022 │
└────────────┘

Iván:
	- Corrección de un par de errores en ft_cd y ft_pwd.
	- Refactorización de analyze_line para separar procesos builtin de los externos.
	  Verás que lo que tu pusiste lo he separado a otra funcion en bultin.c.
	- He añadido el archivo .gitignore para que no sincronice los OBJS del compilador,
	  ni la carpeta del VSCode ni los archivos del sistema de Mac.

	- Habría que hacer nuestro propio exit() para controlar la salida.


┌────────────┐
│ 10/08/2022 │
└────────────┘

Alessandro:
	- Empiezo a trabajar en la fucion execv que es la encargada de ejecutar los comandos
	- Comienzo a interpretar un poco mas lo que se envia en la linea de comando
	  en caso de <, >, << y >>.



┌────────────┐
│ 13/08/2022 │
└────────────┘

Alessandro:
	- agrergue un archivo fuera de las carpetas que se llama segmentar_linea.c 
	(lo estoy uasndo para porbar funciones para parsear la linea que nos envian)


┌────────────┐
│ 19/08/2022 │
└────────────┘

Iván:
	- Reordenado este archivo para que esté ordenado cronológicamente.
	- He visto que tenemos muchos LEAKS de memoria, he intentado encontrar de donde salen pero no doy
	con ello, me rindo!! otro día los encontraré.
	
	
Alessandro: 

	!!! RECUERDA QUE ALGUNOS PUEDEN VENIR DE LA FUNCION READLINE !!!

	- perdon por no haber podido ir tanto estos dias mis horarios estan ciendo un poco un horibles :(



┌────────────┐
│ 24/08/2022 │
└────────────┘

Alessandro:

	- Estoy trabajando en el parceo de la linea de comandos, para seccionarla 
	  en las distainta partes de la misma, sea redireccion  comando o pipe.
	- Agregue el archivo line_treatment.c donde voy agregando las funciones a usar.

		┌──────────────┐  ┌───────────────┐  ┌────────────-------──┐  ┌──────────────┐
		│ comando  = 6 │  | argumento = 7 |  |  re-dir =1-2-3-4-5  |  |  archivo = 7 |
		└──────────────┘  └───────────────┘  └──────────────-------┘  └──────────────┘

┌────────────┐
│ 27/08/2022 │
└────────────┘

Alessandro:

	- En Prueba_segmentar.c ya he logrado separar las linea un poco mejor pero falta
	asicnarle a cada parte para que se utilizaria.

┌────────────┐
│ 03/09/2022 │
└────────────┘

Alessandro:

	- El tratado de la linea ya funciona en bien la separacion de los distintas partes
	voy a comensar con la parte de limpiar las comillas y expandir las partes de la misma,

	- Tengo que ponerme para aseguararme que el tipo de cada dato que le envio sea el correcto.

┌────────────┐
│ 04/09/2022 │
└────────────┘

Alessandro:

	- La segmentacion ya elimina las comillas y expande o no en caso de ser necesario


┌────────────┐
│ 07/09/2022 │
└────────────┘

Alessandro:

	- Comienzo con ejecucion de comandos.

	- Agregue una nueva estructura para preparar cada comando con sus argumentos
	y ejecutralos mas facilmente, sigue en porceso de creacion lo que asigna cada
	parte de la estructura.

┌────────────┐
│ 09/09/2022 │
└────────────┘

Alessandro:

	- La etructura de comando se crea bien y se puede ejecutar los builtin.

	- falta ejecutar los comandos extarnos y que hacer si solo es un here_doc.

┌────────────┐
│ 17/09/2022 │
└────────────┘

Alessandro:

	-  Ya se pueden ejecutar los comandos con sus distintas redireccione de entrada y salidas


┌────────────┐
│ 18/09/2022 │
└────────────┘

Alessandro:

	-  El comando CD funciona con la ruta que le envies, menos si se envia sin argumentos

	-	Tenemos 2 leaks que no consigo en que momento se generan.
	
┌────────────┐
│ 23/09/2022 │
└────────────┘

Alessandro:

	-	Corregidos los leaks;

	-	Nuevo leaks al hacer echo $?, que tengo que revisar.

┌────────────┐
│ 24/09/2022 │
└────────────┘

Alessandro:

	-	Corregido el leaks de $?

	-	Problema con el funcionaminto de " cat | cat | ls "

┌────────────┐
│ 30/09/2022 │
└────────────┘

Alessandro:

	-	Cambiando forma de almacenar los pipe abiertos para poder cerrarlos en los hijos 

	-	Cerrar todos los pipe abiertos que no se usan en cada hijo

	-	Revisar porque al enviar un bilting ejecuta un comando de mas 


┌────────────┐
│ 05/10/2022 │
└────────────┘

Alessandro:

	-	Fd se abren y cierran perfectamente.


┌────────────┐
│ 12/10/2022 │
└────────────┘

Alessandro:

	-	Creada funcion para gestionar el comando exit y que permita argumentos numericos

	-	Modificada la funcion echo para que admita flag -n 

	- Comienzo a trabajar en que la linea de comando pueda gestionar el ';'
	  {
		funciona para ejecutar otro comando pero sin redireccionar la salida del anterior.
	  }
	

┌────────────┐
│ 16/10/2022 │
└────────────┘

Alessandro:

	-	A falta de mas pruebas funcioona ;

	-	debo corregir la salidas de env y export al fd correcto

	-	corregido el error que ejecutaba mas de un comando cuando se ejecutaba junto a
		un builtin. :D
		
┌────────────┐
│ 18/10/2022 │
└────────────┘

Iván:
	- Estoy estudiando la libreria signal.h para recoger las señales externas. (Las que se usaban en minitalk) en los próximos días empezaré a implementarlo en la minishell.
		
┌────────────┐
│ 19/10/2022 │
└────────────┘

Alessandro:

	- todo funciona correctamente tenemos un leak que creo que se debe al readline

	- voy a intentar hacer una anaimacion para el inicio de la minishell
	
┌────────────┐
│ 25/10/2022 │
└────────────┘

Iván:
	- Ultimamente estoy teniendo mucho lio por problemas familiares. Intentaré volver a buen ritmo a lo largo de esta semana.
