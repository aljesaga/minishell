ORDENADO CRONOLÓGICAMENTE
(Lo más reciente abajo del todo)

┌────────────┐
│ 25/07/2022 │
└────────────┘

Alessandro:
	- export y unset funcionan como deberia;
	pero dejan leaks si la variable fue modificada mas de una vez;

	- agrergue funcion shlvl para aumentar el nivel de la maquina cuando se inicia la minishell :D


┌────────────┐
│ 26/07/2022 │
└────────────┘

Alessandro:
	- modifique la manera de guardar los punteros de los env para poder liberarlos mas facil.

	- agregue la fucncion ft_export_no_args (todavia no funciona del todo)
	[para imprimir los env en orden alfabetico]

	- aregregue la funcion ft_len2chr
	[cuenta los caracteres de un texto hasta cioncidir con el caracter enviado.


┌────────────┐
│ 27/07/2022 │
└────────────┘

Iván:
	- He añadido ft_pwd, que imprime por pantalla el nombre del directorio de trabajo actual.

	- He creado la función get_env_value que busca en la lista de t_env
	y devuelve el valor de la variable que le pidas. Si no la encuentra devuelve NULL.
	Ejemplo:
	{
		char *pwd;
		pwd = get_env_value("PWD", mini);
		// pwd = "/Users/alsanche/minishell/"
	}

	- Los prototipos de lo anterior incluidos en el header.

	- Sigo trabajando en ft_cd desde mi disco duro.


Alessandro:
	- Ordene los env en una carpeta para tenerlo un poco mas ordenado.

	- corrijo algunos errores de mi codigo que daban leaks.

	- export y env ya funcionan como deberina a falta de seguir pobando 
	los originales en bash.

	- [ agregue la funcion ft_puterror(char *funtion, char *str)
	para imprimir el mensaje dde erorro correspodiente en caso de fallar. ]


┌────────────┐
│ 30/07/2022 │
└────────────┘

Iván:
	- He reestructurado TODO!

		CARPETAS
			-carpeta raiz: solo el Makefile (y este archivo txt).
			-lib: con la librería libft.
			-src: con todos los .c y con minishell.h.

		MAKEFILE
		He limpiado el Makefile para que esté más claro.
		He añadido los INCLUDES para que podamos poner #include <minishell.h>
		He correjido el Makefile de libft para que funcione como librería correctamente sin tener que hacer remake.


		NOMBRES CAMBIADOS (antiguo >> nuevo)
			execv		>>	ft_execv
			read_line	>>	analyse_line
			env			>>	ft_env
			exportsa	>>	ft_export_no_args
			export		>>	ft_export
		
		En las funciones BUILTIN, he puesto la descripción y lo que piden en el subject.
		Algunas funciones que estaban junto a otras en el mismo archivo las he separado en archivos independientes.


┌────────────┐
│ 31/07/2022 │
└────────────┘

Iván:
	- Corrección de un par de errores en ft_cd y ft_pwd.
	- Refactorización de analyze_line para separar procesos builtin de los externos.
	  Verás que lo que tu pusiste lo he separado a otra funcion en bultin.c.
	- He añadido el archivo .gitignore para que no sincronice los OBJS del compilador,
	  ni la carpeta del VSCode ni los archivos del sistema de Mac.

	- Habría que hacer nuestro propio exit() para controlar la salida.


┌────────────┐
│ 10/08/2022 │
└────────────┘

Alessandro:
	- Empiezo a trabajar en la fucion execv que es la encargada de ejecutar los comandos
	- Comienzo a interpretar un poco mas lo que se envia en la linea de comando
	  en caso de <, >, << y >>.



┌────────────┐
│ 13/08/2022 │
└────────────┘

Alessandro:
	- agrergue un archivo fuera de las carpetas que se llama segmentar_linea.c 
	(lo estoy uasndo para porbar funciones para parsear la linea que nos envian)


┌────────────┐
│ 19/08/2022 │
└────────────┘

Iván:
	- Reordenado este archivo para que esté ordenado cronológicamente.
	- He visto que tenemos muchos LEAKS de memoria, he intentado encontrar de donde salen pero no doy
	con ello, me rindo!! otro día los encontraré.
	
	!!! RECUERDA QUE ALGUNOS PUEDEN VENIR DE LA FUNCION READLINE !!!
	
Alessandro: 

	- perdon por no haber podido ir tanto estos dias mis horarios estan ciendo un poco un horibles :(







